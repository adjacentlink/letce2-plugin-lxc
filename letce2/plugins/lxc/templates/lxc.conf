<%
import re
from collections import defaultdict
lxc_interfaces = defaultdict(dict)
lxc_mounts = []

for key in context.keys():
    m = re.match(r'lxc.interface\.(\d+)\.(.+)',key)
    if m:
        lxc_interfaces[int(m.group(1))][m.group(2)] = context[key]
        continue

    m = re.match(r'lxc.mount.entry.\d+',key)
    if m:
       lxc_mounts.append(context[key])
       continue
%>
lxc.uts.name=${__node_name}
% for i,index in enumerate(sorted(lxc_interfaces)):
lxc.net.${i}.type=veth
lxc.net.${i}.name=${lxc_interfaces[index]['name']}
lxc.net.${i}.flags=up
% if 'link' in lxc_interfaces[index]:
lxc.net.${i}.link=${lxc_interfaces[index]['link']}
% endif
% if 'hwaddr' in lxc_interfaces[index]:
lxc.net.${i}.hwaddr=${lxc_interfaces[index]['hwaddr']}
% endif
% if 'ipv4' in lxc_interfaces[index]:
lxc.net.${i}.ipv4.address=${lxc_interfaces[index]['ipv4']}
% endif
% if 'ipv6' in lxc_interfaces[index]:
lxc.net.${i}.ipv6.address=${lxc_interfaces[index]['ipv6']}
% endif
lxc.net.${i}.veth.pair=aveth.${__node_index}.${index}
% endfor
lxc.net.${i+1}.type = empty

lxc.console.path = none
lxc.tty.max = 1
lxc.pty.max = 128
lxc.mount.auto = proc:rw sys cgroup
% for entry in  lxc_mounts:
lxc.mount.entry = ${entry}
% endfor

% if lxc_cpus:
lxc.cgroup.cpuset.cpus = ${lxc_cpus}
% endif

lxc.autodev = 1
lxc.hook.autodev = ${__top_dir}/${__node_name}/lxc.hook.autodev.sh
